{
  "version": 3,
  "sources": ["../../src/js/utils.js", "../../src/js/random.js", "../../src/js/overlay.js", "../../src/js/autofill.js"],
  "sourcesContent": ["export function hasProp (name, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, name)\n}\n\nexport function asArray (item) {\n  return Array.isArray(item) ? item : [item]\n}\n\nexport function itemExists (item, array) {\n  for (let i = 0; i < array.length; i++) {\n    const element = array[i]\n    if (item === element) {\n      return true\n    } else if (Array.isArray(element) && itemExists(item, element)) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function truncate (string, length) {\n  return string.slice(0, Math.max(0, length))\n}\n\nexport function toCamelCase (string) {\n  if (typeof string !== 'undefined') {\n    const split = string.split('-').length > 1 ? string.split('-') : string.split('_')\n\n    return split.map((item, index) => {\n      if (index > 0) {\n        item = item.charAt(0).toUpperCase() + item.slice(1)\n      }\n\n      return item\n    }).join('')\n  }\n\n  return string\n}\n\nexport function toKebabCase (string) {\n  if (typeof string !== 'undefined') {\n    return string\n      .match(/[A-Z]{2,}(?=[A-Z][a-z]+\\d*|\\b)|[A-Z]?[a-z]+\\d*|[A-Z]|\\d+/g)\n      .map(x => x.toLowerCase())\n      .join('-')\n  }\n\n  return string\n}\n\nexport function toSnakeCase (string) {\n  if (typeof string !== 'undefined') {\n    return string\n      .match(/[A-Z]{2,}(?=[A-Z][a-z]+\\d*|\\b)|[A-Z]?[a-z]+\\d*|[A-Z]|\\d+/g)\n      .map(x => x.toLowerCase())\n      .join('_')\n  }\n}\n\nexport function stringToArr (string, separator) {\n  return string.split(`${separator}`).map(item => item.trim())\n}\n\nexport function notContainsAttributes (element, attributes) {\n  const excludedAttributes = new Set(attributes)\n\n  return element.getAttributeNames().every(attr => {\n    return !excludedAttributes.has(attr)\n  })\n}\n\nexport function notContainsTypes (input, types) {\n  return !types.includes(input.type)\n}\n", "import * as utils from './utils.js'\n\nexport default class Random {\n  static data = {\n    lastname: ['Kent', 'Doe', 'Bond'],\n    firstname: ['Clark', 'John', 'James'],\n    location: [\n      {\n        country: 'United States of America',\n        countryCode: 1,\n        iso: 'US/USA',\n        state: 'New York',\n        phoneNumber: '012-345-6789',\n        city: 'New York City',\n        zipCode: '10016',\n        street: '7985 E 38th St',\n        currency: 'US Dollar',\n        tld: 'us'\n      },\n      {\n        country: 'France',\n        countryCode: 33,\n        iso: 'FR/FRA',\n        state: 'Ile-de-France',\n        phoneNumber: '0123456789',\n        city: 'Paris',\n        zipCode: '75008',\n        street: '312 Av. des Champs-\u00C9lys\u00E9es',\n        currency: 'Euro',\n        tld: 'fr'\n      },\n      {\n        country: 'United Kingdom',\n        countryCode: 44,\n        iso: 'GB/GBR',\n        state: 'London',\n        phoneNumber: '02012347890',\n        city: 'London',\n        zipCode: '75008',\n        street: '1578 Willesden St',\n        currency: 'Pounds',\n        tld: 'uk'\n      }\n    ],\n    animal: ['Dog', 'Cat', 'Bird'],\n    colorString: ['Red', 'Green', 'Blue'],\n    colorHex: ['#ff0000', '#00ff00', '#0000ff'],\n    music: ['Classical', 'Electro', 'Blues'],\n    vehicle: ['Car', 'Bicycle', 'Truck'],\n    company: ['Test Inc.', '3W Corp', 'DevIn'],\n    search: ['search keyword 1', 'search keyword 2', 'search keyword 3']\n  }\n\n  static mapInputTypePreset = {\n    tel: 'phoneNumber',\n    email: 'email',\n    color: 'colorHex',\n    datetimeLocal: 'datetime',\n    time: 'time',\n    date: 'date'\n  }\n\n  static mapInputTypeStringOption = {\n    text: 'string',\n    textarea: 'string',\n    email: 'email',\n    password: 'password'\n  }\n\n  constructor ({ withPreset }) {\n    this.withPreset = withPreset\n    if (this.withPreset) {\n      this.initPreset()\n    }\n  }\n\n  initPreset () {\n    this.preset = {}\n    for (const key in Random.data) {\n      if (key !== 'location') {\n        this.preset[key] = Random.getRandomItem(Random.data[key])\n      } else {\n        this.preset = { ...this.preset, ...Random.getRandomItem(Random.data.location) }\n      }\n    }\n\n    this.preset.name = this.preset.firstname\n    this.preset.fullname = `${this.preset.firstname} ${this.preset.lastname}`\n    this.preset.email = this.genPresetEmail()\n    this.preset.username = this.genPresetUsername()\n    this.preset.nickname = this.preset.username\n    this.preset.password = this.genPresetPassword()\n    this.preset.birthdate = this.genPresetBirthdate()\n    this.preset.age = this.genPresetAge()\n    this.preset.url = this.genPresetUrl()\n    this.preset.datetime = this.genPresetDatetime()\n    this.preset.date = this.genPresetDate()\n    this.preset.month = this.genPresetMonth()\n    this.preset.week = this.genPresetWeek()\n    this.preset.time = this.genPresetTime()\n  }\n\n  genPresetEmail () {\n    return `${this.preset.firstname.toLocaleLowerCase()}.${this.preset.lastname.toLocaleLowerCase()}@${this.preset.company.toLocaleLowerCase().replace(/\\W/g, '')}.${this.preset.tld}`\n  }\n\n  genPresetUsername () {\n    return `${this.preset.firstname}_${this.preset.lastname}`.toLowerCase()\n  }\n\n  genPresetPassword () {\n    const mapChars = {\n      a: '4', e: '3', g: '9', i: '1', l: '7', s: '5', z: '2'\n    }\n    const base = `${this.preset.username}_isnotasecurepwd`\n    const string = [...base].map(char => {\n      return mapChars[char] ?? char\n    }).map(char => {\n      return Random.genBool() ? char.toLocaleUpperCase() : char\n    }).join('')\n\n    return string\n  }\n\n  genPresetAge () {\n    return Math.floor((Date.now() - new Date(this.preset.birthdate).getTime()) / 3.155_76e+10)\n  }\n\n  genPresetUrl () {\n    return `https://www.${this.preset.company.toLocaleLowerCase().replace(/\\W/g, '')}.${this.preset.tld}`\n  }\n\n  genPresetBirthdate () {\n    const date = new Date()\n    const years = date.getFullYear()\n    const randomYear = years - Random.genInt(21, 100)\n    const randomMonth = Random.genInt(0, 11)\n    const randomDay = Random.genInt(1, 31)\n    const birthdate = new Date(randomYear, randomMonth, randomDay).toISOString().split('T')[0]\n\n    return birthdate\n  }\n\n  genPresetDatetime () {\n    return Random.getDatetime()\n  }\n\n  genPresetDate () {\n    return Random.getDate(this.preset.datetime)\n  }\n\n  genPresetMonth () {\n    return Random.getMonth(this.preset.datetime)\n  }\n\n  genPresetWeek () {\n    return Random.getWeek(this.preset.datetime)\n  }\n\n  genPresetTime () {\n    return Random.getTime(this.preset.datetime)\n  }\n\n  searchPreset ({ type, ...attrs }) {\n    const camelType = utils.toCamelCase(type)\n\n    for (const pKey in this.preset) {\n      for (const aKey in attrs) {\n        const attrVal = attrs[aKey]\n        const reg = new RegExp(`^${attrVal}$`, 'i')\n        if (attrVal?.length > 0 && reg.test(pKey)) {\n          return this.preset[pKey]\n        }\n      }\n    }\n\n    if (Random.mapInputTypePreset[camelType]) {\n      return this.preset[Random.mapInputTypePreset[camelType]]\n    }\n  }\n\n  genInputValue (input) {\n    let inputValue\n    let type\n    if (input.getAttribute('list')?.length > 0) type = 'datalist'\n    else if (input.tagName === 'PROGRESS') type = 'progress'\n    else if (input.tagName === 'METER') type = 'meter'\n    else type = input.type\n\n    const stringType = Random.mapInputTypeStringOption[type] ?? 'string'\n\n    switch (type) {\n      case 'select-one':\n      case 'select-multiple':\n        inputValue = this.genSelect(input)\n        break\n\n      case 'checkbox':\n        inputValue = this.genCheckbox(input)\n        break\n\n      case 'radio':\n        inputValue = this.genRadio(input)\n        break\n\n      case 'datalist':\n        inputValue = this.genDatalist(input)\n        break\n\n      case 'range':\n        inputValue = this.genRange(input)\n        break\n\n      case 'number':\n        inputValue = this.genNumber(input)\n        break\n\n      case 'progress':\n        inputValue = this.genProgress(input)\n        break\n\n      case 'meter':\n        inputValue = this.genMeter(input)\n        break\n\n      case 'date':\n      case 'datetime-local':\n      case 'month':\n      case 'week':\n      case 'time':\n        inputValue = this.genDate(input, type)\n        break\n\n      case 'color':\n        inputValue = this.genColor()\n        break\n\n      default:\n        break\n    }\n\n    if (this.withPreset) {\n      const attributes = Random.getAttributesByKeyValue(input)\n      const preset = this.searchPreset({ type, ...attributes })\n\n      if (typeof preset !== 'undefined') inputValue = preset\n    }\n\n    if (typeof inputValue === 'undefined') {\n      const minlength = input.getAttribute('minlength') ? Number.parseInt(input.getAttribute('minlength')) : false\n      const maxlength = input.getAttribute('maxlength') ? Number.parseInt(input.getAttribute('maxlength')) : false\n\n      inputValue = Random.gen(stringType, { min: minlength, max: maxlength })\n    }\n\n    return inputValue\n  }\n\n  genSelect (input) {\n    const selectType = input.type\n    const options = input.querySelectorAll('option')\n    const optionsIndexes = [...options]\n      .map((option, index) => option.value.length > 0 ? index : false)\n      .filter(Boolean)\n    const optionsIndexesCount = optionsIndexes.length\n\n    if (selectType === 'select-one') {\n      return optionsIndexes[Random.genInt(0, optionsIndexes.length - 1)]\n    } else {\n      const minOptionToSelect = Random.genInt(2, optionsIndexesCount)\n      let randomOptionsIndexes = []\n\n      while (randomOptionsIndexes.length < minOptionToSelect) {\n        const randomOptionIndex = optionsIndexes[Random.genInt(0, optionsIndexesCount - 1)]\n\n        if (!randomOptionsIndexes.includes(randomOptionIndex)) {\n          randomOptionsIndexes = [...randomOptionsIndexes, randomOptionIndex]\n        }\n      }\n\n      return randomOptionsIndexes\n    }\n  }\n\n  genCheckbox (input) {\n    const reg = /\\[/g\n    if (reg.test(input.getAttribute('name'))) {\n      const checkboxesIndexes = [...document.querySelectorAll(`input[name^=${input.getAttribute('name')\n        .split('[')[0]}\\\\[]`)]\n        .map((_, index) => index)\n\n      const minCheckboxToCheck = Random.genInt(1, checkboxesIndexes.length)\n      let randomCheckboxesIndexes = []\n\n      while (randomCheckboxesIndexes.length < minCheckboxToCheck) {\n        const randomCheckboxIndex = checkboxesIndexes[Random.genInt(0, checkboxesIndexes.length - 1)]\n\n        if (!randomCheckboxesIndexes.includes(randomCheckboxIndex)) {\n          randomCheckboxesIndexes = [...randomCheckboxesIndexes, randomCheckboxIndex]\n        }\n      }\n\n      return randomCheckboxesIndexes\n    } else {\n      return Random.genBool()\n    }\n  }\n\n  genRadio (input) {\n    const radioIndexes = [...document.querySelectorAll(`[name^=${input.getAttribute('name').split('[')[0]}]`)].map((_, index) => {\n      return index\n    })\n\n    return radioIndexes[Random.genInt(0, radioIndexes.length - 1)]\n  }\n\n  genDatalist (input) {\n    const options = document.querySelectorAll(`datalist#${input.getAttribute('list')} option`)\n    if (options !== null) {\n      const optionsIndexes = [...options].map((option, index) => option.value.length > 0 ? index : false).filter(Boolean)\n\n      return optionsIndexes[Random.genInt(0, optionsIndexes.length - 1)]\n    }\n  }\n\n  genRange (input) {\n    const min = input.getAttribute('min') ?? 0\n    const max = input.getAttribute('max') ?? 100\n\n    return Random.genInt(min, max)\n  }\n\n  genNumber (input) {\n    const min = input.getAttribute('min') ?? -1000\n    const max = input.getAttribute('max') ?? 1000\n\n    return Random.genInt(min, max)\n  }\n\n  genProgress (input) {\n    const max = input.getAttribute('max') ?? 100\n\n    return Random.genInt(0, max)\n  }\n\n  genMeter (input) {\n    return this.genNumber(input)\n  }\n\n  genDate (input, type = 'date') {\n    const start = input.getAttribute('min') ?? '1970-01-01'\n    const end = input.getAttribute('max') ?? '2099-12-31'\n    let date\n\n    switch (type) {\n      case 'datetime-local':\n        date = Random.genDatetime(start, end)\n        break\n      case 'month':\n        date = Random.genMonth(start, end)\n        break\n      case 'week':\n        date = Random.genWeek(start, end)\n        break\n      case 'time':\n        date = Random.genTime(start, end)\n        break\n      case 'date':\n        date = Random.genDate(start, end)\n        break\n    }\n\n    return date\n  }\n\n  genColor () {\n    return `#${Math.floor(Math.random() * 16_777_215).toString(16)}`\n  }\n\n  static parse (string) {\n    const match = string.match(/^(\\w+)/)\n    if (match) {\n      const stringType = match[1]\n      const splitArgs = string.split('|')\n      const options = {}\n      if (splitArgs.length > 0) {\n        for (let i = 0; i < splitArgs.length; i++) {\n          const splitArg = splitArgs[i].split(':')\n          options[splitArg[0]] = splitArg[1]\n        }\n      }\n\n      return Random.gen(stringType, options)\n    }\n  }\n\n  static gen (stringType, options) {\n    const alphaLower = 'abcdefghijklmnopqrstuvwxyz'\n    const alphaUpper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    const alpha = alphaLower + alphaUpper\n    const digit = '0123456789'\n    const specialsChars = ' !\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~'\n    const allChars = alpha + digit + specialsChars\n\n    const stringTypes = {\n      string: alpha,\n      email: alphaLower,\n      password: allChars,\n      digit\n    }\n\n    const minLength = options.min || 12\n    const maxLength = options.max || 16\n    const randomLength = Random.genInt(minLength, maxLength)\n\n    options.len = options.len || randomLength\n    options.chars = stringTypes[stringType]\n\n    let randomString = ''\n    if (stringType === 'email') {\n      randomString += Random.genEmail(options)\n    } else {\n      if (options.chars) {\n        randomString += Random.genString(options)\n      }\n    }\n\n    return randomString\n  }\n\n  static genEmail (options) {\n    const length = options.len >= 5 ? options.len : 5\n\n    const tldLength = 2\n    const domainLength = Math.floor(length / 3)\n    const usernameLength = length - domainLength + tldLength\n\n    let randomString = ''\n\n    randomString += Random.genString({ ...options, len: usernameLength })\n    randomString += '@'\n    randomString += Random.genString({ ...options, len: domainLength })\n    randomString += '.'\n    randomString += Random.genString({ ...options, len: tldLength })\n\n    return randomString\n  }\n\n  static genString (options) {\n    const chars = options.chars\n    const length = options.len\n\n    let randomString = ''\n\n    for (let i = 0; i < length; i++) {\n      randomString += chars[Math.floor(Math.random() * chars.length)]\n    }\n\n    return randomString\n  }\n\n  static getAttributesByKeyValue (input) {\n    const attrNames = ['name', 'id', 'class']\n\n    const attributesByKV = attrNames.reduce((acc, key) => {\n      const attrValue = input.getAttribute(key)\n      if (typeof attrValue !== 'undefined') {\n        acc[key] = attrValue\n      }\n\n      return acc\n    }, {})\n\n    return attributesByKV\n  }\n\n  static genInt (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n\n  static genBool () {\n    return Math.random() < 0.5\n  }\n\n  static genDateBetween (start, end) {\n    start = start instanceof Date ? start : new Date(start)\n    end = end instanceof Date ? end : new Date(end)\n\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()))\n  }\n\n  static genDate (start, end) {\n    const date = Random.genDateBetween(start, end)\n    const dateFormat = Random.getDate(Random.getDatetime(date))\n\n    return dateFormat\n  }\n\n  static genDatetime (start, end) {\n    const date = Random.genDateBetween(start, end)\n\n    return Random.getDatetime(date)\n  }\n\n  static genMonth (start, end) {\n    return Random.getMonth(Random.genDate(start, end))\n  }\n\n  static genWeek (start, end) {\n    return Random.getWeek(Random.genDate(start, end))\n  }\n\n  static genTime (start, end) {\n    return Random.getTime(Random.genDatetime(start, end))\n  }\n\n  static getDatetime (date) {\n    if (typeof date === 'undefined') {\n      date = new Date()\n    }\n\n    const datetime = date.toISOString().split('.')[0]\n\n    return datetime\n  }\n\n  static getDate (datetime) {\n    return datetime.split('T')[0]\n  }\n\n  static getMonth (date) {\n    date = date instanceof Date ? date : new Date(date)\n\n    return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}`\n  }\n\n  static getWeek (date) {\n    date = date instanceof Date ? date : new Date(date)\n\n    return `${date.getFullYear()}-W${Random.getWeekNumber(date).toString().padStart(2, '0')}`\n  }\n\n  static getTime (datetime) {\n    return datetime.split('T')[1]\n  }\n\n  static getWeekNumber (date) {\n    date = date instanceof Date ? date : new Date(date)\n    const startDate = new Date(date.getFullYear(), 0, 1)\n    const days = Math.floor((date - startDate) / (24 * 60 * 60 * 1000))\n    const weekNumber = Math.ceil(days / 7)\n\n    return weekNumber\n  }\n\n  static getRandomItem (array) {\n    return array[Math.floor(Math.random() * array.length)]\n  }\n}\n", "export default class Overlay {\n  constructor (autofillInstance) {\n    this.autofill = autofillInstance\n  }\n\n  show () {\n    const autofill = this.autofill\n\n    document.querySelector('body').style.paddingTop = '35px'\n\n    const html = `\n      <div class=\"autofill-overlay\">\n        <div class=\"autofill-overlay-brand\">\n          <span class=\"autofill-overlay-name\">${autofill.infos.name}</span>\n          <span class=\"autofill-overlay-version\">${autofill.infos.version}</span>\n        </div>\n        <div class=\"autofill-overlay-buttons\">\n          <button type=\"button\" class=\"js-btn-infos\">${Overlay.icon('information-circle-outline')}</button>\n          <button type=\"button\" class=\"js-btn-autofill\">${Overlay.icon('play-outline')}</button>\n          <button type=\"button\" class=\"js-btn-reset\">${Overlay.icon('reload-outline')}</button>\n        </div>\n        <div class=\"autofill-overlay-links\">\n          <a class=\"npm\" href=\"${autofill.infos.npm}\" title=\"NPM package\">${Overlay.icon('npm')}</a>\n          <a class=\"github\" href=\"${autofill.infos.github}\" title=\"Github repository\">${Overlay.icon('github')}</a>\n        </div>\n      </div>\n      `\n    document.body.insertAdjacentHTML('beforeend', html)\n\n    document.querySelector('.js-btn-reset').addEventListener('click', () => {\n      this.autofill.domForms.forEach(domForm => {\n        domForm.form.reset()\n        domForm.inputs.forEach(input => {\n          input.checked = false\n        })\n      })\n    })\n\n    document.querySelector('.js-btn-autofill').addEventListener('click', () => {\n      this.autofill.fill()\n    })\n\n    document.querySelector('.js-btn-infos').addEventListener('click', () => {\n      const config = { ...this.autofill.config }\n      const forms = { ...this.autofill.forms }\n\n      const groupTitleStyle = 'color: #81aece;'\n      const configTitleStyle = 'color: #b24bd6;'\n      const consoleLogKeyStyle = 'color: #cf7b3a; font-weight: 600;'\n\n      console.log(`%cAutofill.js - v${this.autofill.infos.version}`, `\n        padding: 0.5rem 1.5rem;\n        color: #212529;\n        background-color: #81aece;\n      `)\n\n      console.groupCollapsed('%cAutofill Instance', groupTitleStyle)\n      console.log(this.autofill)\n      console.groupEnd()\n\n      console.groupCollapsed('%cInfos', groupTitleStyle)\n      console.table(this.autofill.infos)\n      console.groupEnd()\n\n      // BEGIN config\n      console.groupCollapsed('%cConfig', groupTitleStyle)\n\n      console.groupCollapsed('%cDefault', configTitleStyle)\n      for (const key in { ...this.autofill.autofillConfig }) {\n        const value = this.autofill.autofillConfig[key]\n        console.log(`%c${key}`, consoleLogKeyStyle, value)\n      }\n      console.groupEnd()\n\n      console.groupCollapsed('%cConstructor', configTitleStyle)\n      for (const key in this.autofill.options) {\n        const value = this.autofill.options[key]\n        console.log(`%c${key}`, consoleLogKeyStyle, value)\n      }\n      console.groupEnd()\n\n      console.group('%cInstance', configTitleStyle)\n      for (const key in config) {\n        const value = config[key]\n        console.log(`%c${key}`, consoleLogKeyStyle, value)\n      }\n      console.groupEnd()\n\n      console.groupEnd()\n      // END config\n\n      if (Object.keys(forms).length > 0) {\n        console.groupCollapsed('%cForms', groupTitleStyle)\n        for (const selector in forms) {\n          const form = forms[selector]\n          const inputs = form.inputs\n          console.groupCollapsed(`%c${selector}`, 'color: #e74747')\n          for (const key in form) {\n            if (key !== 'inputs') {\n              console.log(`%c${key}`, consoleLogKeyStyle, form[key])\n            }\n          }\n          console.table(inputs)\n\n          console.groupEnd()\n        }\n        console.groupEnd()\n      }\n    })\n  }\n\n  static icon (name) {\n    const icons = {\n      npm: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-${name}\" viewBox=\"0 0 512 512\"><title>NPM package</title><path fill=\"currentColor\" d=\"M227.6 213.1H256v57.1h-28.4z\"/><path fill=\"currentColor\" d=\"M0 156v171.4h142.2V356H256v-28.6h256V156zm142.2 142.9h-28.4v-85.7H85.3v85.7H28.4V184.6h113.8zm142.2 0h-56.9v28.6h-56.9V184.6h113.8zm199.2 0h-28.4v-85.7h-28.4v85.7h-28.4v-85.7H370v85.7h-56.9V184.6h170.7v114.3z\"/></svg>`,\n\n      github: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-${name}\" viewBox=\"0 0 512 512\"><title>Github repository</title><path fill=\"currentColor\" d=\"M256 32C132.3 32 32 134.9 32 261.7c0 101.5 64.2 187.5 153.2 217.9a17.56 17.56 0 003.8.4c8.3 0 11.5-6.1 11.5-11.4 0-5.5-.2-19.9-.3-39.1a102.4 102.4 0 01-22.6 2.7c-43.1 0-52.9-33.5-52.9-33.5-10.2-26.5-24.9-33.6-24.9-33.6-19.5-13.7-.1-14.1 1.4-14.1h.1c22.5 2 34.3 23.8 34.3 23.8 11.2 19.6 26.2 25.1 39.6 25.1a63 63 0 0025.6-6c2-14.8 7.8-24.9 14.2-30.7-49.7-5.8-102-25.5-102-113.5 0-25.1 8.7-45.6 23-61.6-2.3-5.8-10-29.2 2.2-60.8a18.64 18.64 0 015-.5c8.1 0 26.4 3.1 56.6 24.1a208.21 208.21 0 01112.2 0c30.2-21 48.5-24.1 56.6-24.1a18.64 18.64 0 015 .5c12.2 31.6 4.5 55 2.2 60.8 14.3 16.1 23 36.6 23 61.6 0 88.2-52.4 107.6-102.3 113.3 8 7.1 15.2 21.1 15.2 42.5 0 30.7-.3 55.5-.3 63 0 5.4 3.1 11.5 11.4 11.5a19.35 19.35 0 004-.4C415.9 449.2 480 363.1 480 261.7 480 134.9 379.7 32 256 32z\"/></svg>`,\n\n      'information-circle-outline': `<svg xmlns=\"http://www.w3.org/2000/svg\"  class=\"icon icon-${name}\" viewBox=\"0 0 512 512\"><title>Infos (checkout developer tools console)</title><path d=\"M248 64C146.39 64 64 146.39 64 248s82.39 184 184 184 184-82.39 184-184S349.61 64 248 64z\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"32\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M220 220h32v116\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"32\" d=\"M208 340h88\"/><path fill=\"currentColor\" d=\"M248 130a26 26 0 1026 26 26 26 0 00-26-26z\"/></svg>`,\n\n      'play-outline': `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-${name}\" viewBox=\"0 0 512 512\"><title>Fill forms</title><path d=\"M112 111v290c0 17.44 17 28.52 31 20.16l247.9-148.37c12.12-7.25 12.12-26.33 0-33.58L143 90.84c-14-8.36-31 2.72-31 20.16z\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"32\"/></svg>`,\n\n      'reload-outline': `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-${name}\" viewBox=\"0 0 512 512\"><title>Reset forms</title><path d=\"M400 148l-21.12-24.57A191.43 191.43 0 00240 64C134 64 48 150 48 256s86 192 192 192a192.09 192.09 0 00181.07-128\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"32\"/><path fill=\"currentColor\" d=\"M464 97.42V208a16 16 0 01-16 16H337.42c-14.26 0-21.4-17.23-11.32-27.31L436.69 86.1C446.77 76 464 83.16 464 97.42z\"/></svg>`\n    }\n\n    return icons[name]\n  }\n}\n", "import * as utils from './utils.js'\nimport Random from './random.js'\nimport Overlay from './overlay.js'\n\nexport class Autofill {\n  autofillInfos = {\n    author: '0kyn',\n    version: '1.2.3',\n    name: 'Autofill.js',\n    github: 'https://github.com/0kyn/autofill-js',\n    npm: 'https://www.npmjs.com/package/autofill-js'\n  }\n\n  autofillConfig = {\n    autofill: true, // enable autofill\n    autosubmit: false, // emit submit event after form's inputs filling\n    camelize: false, // e.g. allow input property 'inputName' to handle 'input-name' or 'input_name'\n    events: [], // trigger events after value set\n    generate: false, // generate random value where an input's value is formatted as follow {{ password|len:16 }}\n    inputAttributes: ['data-autofill', 'name', 'id', 'class'], // input key attributes targets ordered from the highest priority to the lowest\n    inputAttributesSkip: [], // skip autofilling when input has specific attribute. e.g. 'disabled' or 'readonly',\n    inputTypesSkip: [], // skip autofilling when input has specific type\n    formsSelectors: ['form'], // default form query selector\n    inputsSelectors: ['input', 'textarea', 'select', 'progress', 'meter'], // default inputs support\n    maxlength: false, // truncate if value length > maxlength attribute\n    minlength: false, // fill with random char if value length < minlength attribute\n    overlay: false, // display an overlay with config infos & reset/autofill buttons\n    override: true, // override already defined input value\n    random: false, // if an input value is not defined it fills with a random value\n    randomPreset: false, // if random === true && randomPreset === true then it tries to find a significant preset\n    url: false // JSON config file url\n  }\n\n  constructor (formsSelectors, options) {\n    this.infos = { ...this.autofillInfos }\n    this.config = { ...this.autofillConfig }\n\n    this.initOptions(formsSelectors, options)\n\n    if (this.hasOptions()) {\n      this.initFormsOptions()\n      this.initConfig()\n    }\n  }\n\n  async init () {\n    if (this.config.url) {\n      const configFile = await this.loadFromJson(this.config.url)\n      const jsonFormsOptions = { forms: configFile.forms }\n      const formsSelectors = Object.keys(configFile.forms)\n      this.config = { ...this.autofillConfig, ...configFile.config, ...this.options }\n      this.config.formsSelectors = formsSelectors\n      this.formsOptions = this.mergeJsonFormsOptions(jsonFormsOptions, this.formsOptions)\n    }\n\n    if (this.hasFormsOptions()) {\n      this.initForms()\n    }\n\n    this.initDomForms()\n\n    if (this.config.autofill) {\n      this.fill()\n    }\n    if (this.config.overlay) {\n      const overlay = new Overlay(this)\n      overlay.show()\n    }\n\n    return this\n  }\n\n  async loadFromJson (url) {\n    const response = await fetch(url)\n    const string = await response.text()\n\n    try {\n      const object = JSON.parse(string)\n\n      return object\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  mergeJsonFormsOptions (...args) {\n    const target = {}\n\n    const merger = (obj) => {\n      for (const prop in obj) {\n        if (utils.hasProp(prop, obj)) {\n          if (Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n            target[prop] = this.mergeJsonFormsOptions(target[prop], obj[prop])\n          } else {\n            target[prop] = obj[prop]\n          }\n        }\n      }\n    }\n\n    for (let i = 0; i < args.length; i++) {\n      merger(args[i])\n    }\n\n    return target\n  };\n\n  initOptions (formsSelectors, options) {\n    if (typeof formsSelectors === 'object') {\n      this.options = formsSelectors\n    } else {\n      this.options = options ?? {}\n    }\n\n    this.initFormsSelectors(formsSelectors)\n  }\n\n  initFormsSelectors (options) {\n    if (typeof options !== 'undefined') {\n      if (typeof options === 'string') {\n        this.options.formsSelectors = options.split(',').map(item => item.trim())\n      } else if (Array.isArray(options)) {\n        this.options.formsSelectors = options\n      } else if (options.forms) {\n        this.options.formsSelectors = Object.keys(options.forms)\n      } else if (options.formsSelectors) {\n        this.initFormsSelectors(options.formsSelectors)\n      }\n    }\n  }\n\n  initConfig () {\n    for (const key in this.options) {\n      const option = this.options[key]\n\n      if (utils.hasProp(key, this.autofillConfig)) {\n        this.config[key] = option\n      }\n    }\n  }\n\n  initFormsOptions () {\n    const formsOptions = {}\n\n    for (const key in this.options) {\n      const option = this.options[key]\n\n      if (!utils.hasProp(key, this.autofillConfig)) {\n        formsOptions[key] = option\n      }\n    }\n    if (Object.keys(formsOptions).length > 0) {\n      this.formsOptions = formsOptions\n    }\n  }\n\n  initDomForms () {\n    const domInputs = document.querySelectorAll(this.config.inputsSelectors)\n    let lastForm\n    this.domForms = []\n\n    let i = -1\n    domInputs.forEach((input) => {\n      const form = input.closest('form')\n      const condHasForm = form !== null && lastForm !== form\n      const condOrphan = form === null && lastForm !== null\n\n      if (condHasForm || condOrphan) {\n        i++\n        this.domForms[i] = { form, inputs: [] }\n      }\n\n      lastForm = form\n      this.domForms[i].inputs = [...this.domForms[i].inputs, input]\n    })\n  }\n\n  initForms () {\n    const forms = {}\n\n    this.config.formsSelectors.forEach(formsSelector => {\n      let inputs = {}\n\n      if (this.formsOptions.inputs) {\n        inputs = this.formsOptions.inputs\n      } else if (!this.formsOptions.forms) {\n        inputs = this.formsOptions\n      } else if (this.formsOptions.forms[formsSelector]) {\n        const form = this.formsOptions.forms[formsSelector]\n        forms[formsSelector] = form\n        inputs = form.inputs ?? form\n      }\n\n      forms[formsSelector] = { ...forms[formsSelector], inputs }\n    })\n\n    this.forms = forms\n  }\n\n  getFormConfig (formSelector) {\n    const config = { ...this.forms[formSelector], formSelector }\n    const formConfig = { ...this.config, ...config }\n    delete formConfig.inputs\n\n    return formConfig\n  }\n\n  submit (form, timeout = 1000) {\n    setTimeout(() => {\n      const event = new CustomEvent('submit', { cancelable: true })\n      form.dispatchEvent(event)\n    }, timeout)\n  }\n\n  fill () {\n    if (Object.keys(this.domForms).length === 0) {\n      console.log('No forms found in the HTML DOM')\n      console.log('Handle inputs')\n      this.handleForm(document)\n    } else {\n      this.domForms.forEach(dForm => this.handleForm(dForm))\n    }\n  }\n\n  handleForm (dForm) {\n    let { form, inputs } = dForm\n    const formSelector = this.getFormSelector(form)\n\n    let config = this.config\n\n    if (this.hasFormsOptions()) {\n      if (typeof formSelector === 'undefined') {\n        return false\n      }\n\n      config = this.getFormConfig(formSelector)\n\n      if (config.random) {\n        this.randomInstance = new Random({ withPreset: config.randomPreset })\n      }\n    } else {\n      this.randomInstance = new Random({ withPreset: true })\n    }\n\n    inputs = this.inputsConfigFilter(inputs, config)\n\n    const defaultInputs = this.getDefaultInputs(inputs)\n    const fileInputs = this.getFileInputs(inputs)\n    const checkboxesGroup = this.getCheckboxesGroup(inputs)\n    const radiosGroup = this.getRadios(inputs)\n    const selects = this.getSelects(inputs)\n    const datalists = this.getDatalists(inputs)\n\n    defaultInputs.forEach(input => this.handleDefaultInput(input, config))\n    fileInputs.forEach(input => this.handleFileInput(input, config))\n    checkboxesGroup.forEach(group => this.handleCheckboxGroup(group, config))\n    radiosGroup.forEach(group => this.handleRadioGroup(group, config))\n    selects.forEach(input => this.handleSelect(input, config))\n    datalists.forEach(input => this.handleDatalist(input, config))\n\n    if (config?.autosubmit) {\n      this.submit(form)\n    }\n  }\n\n  getAfConfigByInput (input, config) {\n    if (this.hasFormsOptions() && this.hasFormAndInputs(config)) {\n      const afKey = this.getAfKey(input, config)\n      if (typeof afKey !== 'undefined') return this.forms[config.formSelector].inputs[afKey]\n    }\n\n    return []\n  }\n\n  getAfValue (afKey, config) {\n    const afInput = this.forms[config.formSelector].inputs[afKey]\n    if (typeof afInput === 'object' && utils.hasProp('value', afInput)) return afInput.value\n\n    return afInput\n  }\n\n  getAfKey (input, config) {\n    for (let i = 0; i < this.config.inputAttributes.length; i++) {\n      const inputAttrName = this.config.inputAttributes[i]\n      const inputAttrValue = input.getAttribute(inputAttrName) ?? undefined\n\n      if (typeof inputAttrValue !== 'undefined') {\n        const afKey = inputAttrValue.split('[')[0]\n        if (typeof this.getAfValue(afKey, config) !== 'undefined') {\n          return afKey\n        } else if (config.camelize) {\n          const camelKey = utils.toCamelCase(afKey)\n          if (typeof this.getAfValue(camelKey, config) !== 'undefined') {\n            return camelKey\n          }\n        }\n      }\n    }\n  }\n\n  getInputAfValue (input, config) {\n    let value\n\n    if (this.hasFormsOptions() && this.hasFormAndInputs(config)) {\n      const afKey = this.getAfKey(input, config)\n\n      if (typeof afKey !== 'undefined') {\n        value = this.getAfValue(afKey, config)\n\n        const stringToGen = this.needToGenerate(value, config)\n        if (stringToGen) {\n          value = Random.parse(stringToGen)\n        }\n      } else {\n        if (config.random) {\n          value = this.randomInstance.genInputValue(input)\n        }\n      }\n    } else {\n      // zero config\n      value = this.randomInstance.genInputValue(input)\n    }\n\n    if (config.minlength) {\n      const minlength = Number.parseInt(input.getAttribute('minlength'))\n      if (!Number.isNaN(minlength) && value.length < minlength) {\n        value += Random.gen('string', { len: minlength - value.length })\n      }\n    }\n\n    if (config.maxlength) {\n      const maxlength = Number.parseInt(input.getAttribute('maxlength'))\n      if (!Number.isNaN(maxlength) && value.length > maxlength) {\n        value = utils.truncate(value, maxlength)\n      }\n    }\n\n    return value\n  }\n\n  handleDefaultInput (input, config) {\n    if (config.override || input.value.length === 0) {\n      const value = this.getInputAfValue(input, config)\n\n      if (typeof value !== 'undefined') {\n        this.setInputProp(input, { key: 'value', value }, config)\n      }\n    }\n  }\n\n  handleFileInput (input) {\n    console.log(input, 'I can\\'t handle you for now...')\n  }\n\n  handleCheckboxGroup (group, config) {\n    this.handleCheckboxOrRadioGroups(group, config)\n  }\n\n  handleRadioGroup (group, config) {\n    this.handleCheckboxOrRadioGroups(group, config)\n  }\n\n  handleCheckboxOrRadioGroups (group, config) {\n    const input = group[0]\n\n    if (!config.override) {\n      const groupHasInputChecked = typeof group.find(input => input.checked) !== 'undefined'\n\n      if (groupHasInputChecked) return\n    }\n    const values = utils.asArray(this.getInputAfValue(input, config))\n\n    values.forEach((value, vIndex) => {\n      group.forEach((input, index) => {\n        if (typeof value === 'string' && input.value === value) {\n          this.setInputProp(input, { key: 'checked', value: true }, config)\n        } else if (typeof value === 'number' && index === value) {\n          this.setInputProp(input, { key: 'checked', value: true }, config)\n        } else if (typeof value === 'boolean' && index === vIndex) {\n          this.setInputProp(input, { key: 'checked', value }, config)\n        }\n      })\n    })\n  }\n\n  handleSelect (input, config) {\n    const options = input.querySelectorAll('option')\n    if (!config.override) {\n      const optionsHasSelected = typeof [...options].find(option => option.selected) !== 'undefined'\n\n      if (optionsHasSelected) return\n    }\n    const values = utils.asArray(this.getInputAfValue(input, config))\n    values.forEach((value) => {\n      if (typeof value === 'string') {\n        const option = [...options].find(option => option.value === value)\n        if (typeof option !== 'undefined') {\n          this.setInputProp(option, { key: 'selected', value: true })\n        }\n      } else if (typeof value === 'number') {\n        this.setInputProp(options[value], { key: 'selected', value: true })\n      }\n    })\n\n    this.dispatchInputEvents(input, config)\n  }\n\n  handleDatalist (input, config) {\n    if (config.override || input.value.length === 0) {\n      const value = this.getInputAfValue(input, config)\n      if (typeof value === 'string') {\n        this.setInputProp(input, { key: 'value', value }, config)\n      } else if (typeof value === 'number') {\n        const options = document.querySelectorAll(`datalist#${input.getAttribute('list')} option`)\n        if (options !== null) {\n          this.setInputProp(input, { key: 'value', value: options[value].value }, config)\n        }\n      }\n    }\n  }\n\n  needToGenerate (value, config) {\n    const reg = /{{\\s(.+?)\\s}}/\n\n    if (config.generate && typeof value === 'string' && reg.test(value)) {\n      return value.match(reg)[1]\n    }\n\n    return false\n  }\n\n  getFormSelector (form) {\n    const formsSelectors = this.config.formsSelectors\n\n    for (let i = 0; i < formsSelectors.length; i++) {\n      const formSelector = formsSelectors[i]\n      const formSelectored = document.querySelector(formSelector)\n      if (form === formSelectored) return formSelector\n    }\n\n    // @todo enhance specificity handling\n    for (let i = 0; i < formsSelectors.length; i++) {\n      const formSelector = formsSelectors[i]\n      const formsSelectored = document.querySelectorAll(formSelector)\n      for (let j = 0; j < formsSelectored.length; j++) {\n        const formSelectored = formsSelectored[j]\n        if (form === formSelectored) return formSelector\n      }\n    }\n  }\n\n  getDefaultInputs (inputs) {\n    return inputs.filter(input => {\n      const excludedInputTypes = ['checkbox', 'radio', 'file', 'reset', 'submit', 'button']\n      const excludedAttributes = ['list']\n\n      const condType = !excludedInputTypes.includes(input.type)\n      const condAttr = utils.notContainsAttributes(input, excludedAttributes)\n\n      return condType && condAttr\n    })\n  }\n\n  getFileInputs (inputs) {\n    return inputs.filter(input => input.type === 'file')\n  }\n\n  getCheckboxesGroup (inputs) {\n    const reg = /(.+)\\[/\n    let checkboxesGroup = []\n\n    for (let i = 0; i < inputs.length; i++) {\n      const input = inputs[i]\n      if (input.type !== 'checkbox') continue\n\n      const attrValue = input.getAttribute('name')\n      if (attrValue?.match(reg)) {\n        const inputExists = utils.itemExists(input, checkboxesGroup)\n\n        if (!inputExists) {\n          const reg2 = new RegExp(`^${attrValue.match(reg)[1]}\\\\[`)\n          const checkboxGroup = inputs.filter(input => input.type === 'checkbox' && reg2.test(input.getAttribute('name')))\n\n          if (checkboxGroup.length > 0) {\n            checkboxesGroup = [...checkboxesGroup, [...checkboxGroup]]\n          }\n        }\n      } else {\n        checkboxesGroup = [...checkboxesGroup, [input]]\n      }\n    }\n\n    return checkboxesGroup\n  }\n\n  getSelects (inputs) {\n    return inputs.filter(input => ['select-one', 'select-multiple'].includes(input.type))\n  }\n\n  getDatalists (inputs) {\n    return inputs.filter(input => input.getAttribute('list') !== null)\n  }\n\n  getRadios (inputs) {\n    let radios = []\n\n    for (let i = 0; i < inputs.length; i++) {\n      const input = inputs[i]\n      const attrValue = input.getAttribute('name')\n      const inputExists = utils.itemExists(input, radios)\n      if (!inputExists) {\n        const radioGroup = inputs.filter(input => input.type === 'radio' && input.getAttribute('name') === attrValue)\n        if (radioGroup.length > 0) {\n          radios = [...radios, [...radioGroup]]\n        }\n      }\n    }\n\n    return radios\n  }\n\n  hasOptions () {\n    return typeof this.options !== 'undefined' && Object.keys(this.options).length > 0\n  }\n\n  hasFormsOptions () {\n    return typeof this.formsOptions !== 'undefined'\n  }\n\n  hasFormAndInputs (formConfig) {\n    return formConfig && this.forms[formConfig.formSelector] && this.forms[formConfig.formSelector].inputs\n  }\n\n  inputsConfigFilter (inputs, config) {\n    return inputs.filter(input => {\n      const condAttrs = utils.notContainsAttributes(input, config.inputAttributesSkip)\n      const condTypes = utils.notContainsTypes(input, config.inputTypesSkip)\n      const cond = condAttrs && condTypes\n\n      return cond\n    })\n  }\n\n  dispatchInputEvents (input, config) {\n    const inputEvents = this.getAfConfigByInput(input, config)?.events ?? []\n    const events = inputEvents.length > 0 ? inputEvents : config.events\n\n    events.forEach(event => input.dispatchEvent(new Event(event, { cancelable: true })))\n  }\n\n  setInputProp (input, { key, value }, config) {\n    input[key] = value\n    if (typeof config !== 'undefined') {\n      this.dispatchInputEvents(input, config)\n    }\n  }\n}\n\nexport const autofill = (formsSelectors, options) => {\n  return new Promise(resolve => {\n    const af = new Autofill(formsSelectors, options)\n    if (document.readyState === 'complete') {\n      resolve(af.init())\n    } else {\n      window.addEventListener('load', () => {\n        resolve(af.init())\n      })\n    }\n  })\n}\n\nwindow.autofill = autofill\n"],
  "mappings": "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",
  "names": ["autofill", "input", "option"]
}
